[{"C:\\Users\\Nath's\\Documents\\SilkRoad\\portal\\src\\index.js":"1","C:\\Users\\Nath's\\Documents\\SilkRoad\\portal\\src\\reportWebVitals.js":"2","C:\\Users\\Nath's\\Documents\\SilkRoad\\portal\\src\\App.js":"3","C:\\Users\\Nath's\\Documents\\SilkRoad\\portal\\src\\routes\\AppRoutes.js":"4","C:\\Users\\Nath's\\Documents\\SilkRoad\\portal\\src\\common\\providers\\AuthProvider.js":"5","C:\\Users\\Nath's\\Documents\\SilkRoad\\portal\\src\\pages\\NotFound.js":"6","C:\\Users\\Nath's\\Documents\\SilkRoad\\portal\\src\\pages\\ForgotPassword.js":"7","C:\\Users\\Nath's\\Documents\\SilkRoad\\portal\\src\\common\\components\\SessionExpired.js":"8","C:\\Users\\Nath's\\Documents\\SilkRoad\\portal\\src\\common\\translations\\i18n.js":"9","C:\\Users\\Nath's\\Documents\\SilkRoad\\portal\\src\\pages\\Login.js":"10","C:\\Users\\Nath's\\Documents\\SilkRoad\\portal\\src\\common\\hooks\\useAuthState.js":"11","C:\\Users\\Nath's\\Documents\\SilkRoad\\portal\\src\\pages\\Dashboard\\index.js":"12","C:\\Users\\Nath's\\Documents\\SilkRoad\\portal\\src\\common\\layouts\\AppLayout.js":"13","C:\\Users\\Nath's\\Documents\\SilkRoad\\portal\\src\\pages\\Dashboard\\components\\DashboardCard.js":"14","C:\\Users\\Nath's\\Documents\\SilkRoad\\portal\\src\\pages\\Dashboard\\components\\Charts.js":"15","C:\\Users\\Nath's\\Documents\\SilkRoad\\portal\\src\\common\\components\\Header.js":"16","C:\\Users\\Nath's\\Documents\\SilkRoad\\portal\\src\\common\\components\\Drawer.js":"17","C:\\Users\\Nath's\\Documents\\SilkRoad\\portal\\src\\common\\components\\DrawerList.js":"18","C:\\Users\\Nath's\\Documents\\SilkRoad\\portal\\src\\pages\\Profile\\index.js":"19","C:\\Users\\Nath's\\Documents\\SilkRoad\\portal\\src\\pages\\Profile\\components\\profilePassword.js":"20","C:\\Users\\Nath's\\Documents\\SilkRoad\\portal\\src\\pages\\Profile\\components\\profilePayments.js":"21","C:\\Users\\Nath's\\Documents\\SilkRoad\\portal\\src\\pages\\Profile\\components\\profileCompanyDetails.js":"22","C:\\Users\\Nath's\\Documents\\SilkRoad\\portal\\src\\pages\\Profile\\components\\profileBasicInfo.js":"23","C:\\Users\\Nath's\\Documents\\SilkRoad\\portal\\src\\pages\\Profile\\components\\profileAddress.js":"24","C:\\Users\\Nath's\\Documents\\SilkRoad\\portal\\src\\pages\\Profile\\components\\ProfileBasicInfo.js":"25","C:\\Users\\Nath's\\Documents\\SilkRoad\\portal\\src\\pages\\Profile\\components\\ProfileCompanyDetails.js":"26","C:\\Users\\Nath's\\Documents\\SilkRoad\\portal\\src\\pages\\Profile\\components\\ProfileAddress.js":"27","C:\\Users\\Nath's\\Documents\\SilkRoad\\portal\\src\\pages\\Profile\\components\\ProfilePassword.js":"28","C:\\Users\\Nath's\\Documents\\SilkRoad\\portal\\src\\pages\\Profile\\components\\ProfilePayments.js":"29","C:\\Users\\Nath's\\Documents\\SilkRoad\\portal\\src\\components\\GenericTableView\\components\\GenericTableBody.js":"30","C:\\Users\\Nath's\\Documents\\SilkRoad\\portal\\src\\components\\GenericTableView\\index.js":"31","C:\\Users\\Nath's\\Documents\\SilkRoad\\portal\\src\\components\\GenericTableView\\tableConfigurations.js":"32","C:\\Users\\Nath's\\Documents\\SilkRoad\\portal\\src\\modals\\CreationTypeDialog.js":"33","C:\\Users\\Nath's\\Documents\\SilkRoad\\portal\\src\\components\\GenericTableView\\components\\Table.js":"34","C:\\Users\\Nath's\\Documents\\SilkRoad\\portal\\src\\components\\GenericTableView\\components\\TableHeader.js":"35","C:\\Users\\Nath's\\Documents\\SilkRoad\\portal\\src\\components\\GenericTableView\\components\\TableToolbar.js":"36","C:\\Users\\Nath's\\Documents\\SilkRoad\\portal\\src\\components\\GenericTableView\\components\\TableGenericDeleteDialog.js":"37","C:\\Users\\Nath's\\Documents\\SilkRoad\\portal\\src\\components\\GenericTableView\\filters\\OrdersFilterView.js":"38","C:\\Users\\Nath's\\Documents\\SilkRoad\\portal\\src\\pages\\ManageBusiness\\index.js":"39","C:\\Users\\Nath's\\Documents\\SilkRoad\\portal\\src\\pages\\BusinessDetails\\index.js":"40","C:\\Users\\Nath's\\Documents\\SilkRoad\\portal\\src\\common\\components\\TabPanel.js":"41","C:\\Users\\Nath's\\Documents\\SilkRoad\\portal\\src\\pages\\BusinessDetails\\components\\BusinessDetailsCard.js":"42","C:\\Users\\Nath's\\Documents\\SilkRoad\\portal\\src\\pages\\BusinessDetails\\components\\BusinessAddressDetails.js":"43","C:\\Users\\Nath's\\Documents\\SilkRoad\\portal\\src\\pages\\BusinessDetails\\components\\BusinessContactDetails.js":"44","C:\\Users\\Nath's\\Documents\\SilkRoad\\portal\\src\\pages\\ManageUser\\index.js":"45","C:\\Users\\Nath's\\Documents\\SilkRoad\\portal\\src\\pages\\UserDetails\\index.js":"46","C:\\Users\\Nath's\\Documents\\SilkRoad\\portal\\src\\common\\components\\AppForms.js":"47","C:\\Users\\Nath's\\Documents\\SilkRoad\\portal\\src\\pages\\Register\\index.js":"48","C:\\Users\\Nath's\\Documents\\SilkRoad\\portal\\src\\website\\Home\\index.js":"49","C:\\Users\\Nath's\\Documents\\SilkRoad\\portal\\src\\website\\Home\\components\\WebsiteHeader.js":"50","C:\\Users\\Nath's\\Documents\\SilkRoad\\portal\\src\\website\\Home\\components\\Header.js":"51"},{"size":795,"mtime":1630992747997,"results":"52","hashOfConfig":"53"},{"size":362,"mtime":1630930561987,"results":"54","hashOfConfig":"53"},{"size":562,"mtime":1631024336050,"results":"55","hashOfConfig":"53"},{"size":3237,"mtime":1631087018795,"results":"56","hashOfConfig":"53"},{"size":2909,"mtime":1631086468584,"results":"57","hashOfConfig":"53"},{"size":148,"mtime":1630992505219,"results":"58","hashOfConfig":"53"},{"size":2759,"mtime":1631086524726,"results":"59","hashOfConfig":"53"},{"size":528,"mtime":1631007956619,"results":"60","hashOfConfig":"53"},{"size":719,"mtime":1630992003461,"results":"61","hashOfConfig":"53"},{"size":3904,"mtime":1631080490760,"results":"62","hashOfConfig":"53"},{"size":278,"mtime":1630995375814,"results":"63","hashOfConfig":"53"},{"size":1786,"mtime":1631007968709,"results":"64","hashOfConfig":"53"},{"size":1342,"mtime":1631002735032,"results":"65","hashOfConfig":"53"},{"size":1035,"mtime":1631002602050,"results":"66","hashOfConfig":"53"},{"size":1638,"mtime":1631002595783,"results":"67","hashOfConfig":"53"},{"size":1432,"mtime":1631002821969,"results":"68","hashOfConfig":"53"},{"size":1246,"mtime":1631002221854,"results":"69","hashOfConfig":"53"},{"size":2138,"mtime":1631002248427,"results":"70","hashOfConfig":"53"},{"size":2312,"mtime":1631007935568,"results":"71","hashOfConfig":"53"},{"size":556,"mtime":1631007773814,"results":"72","hashOfConfig":"53"},{"size":553,"mtime":1631007778602,"results":"73","hashOfConfig":"53"},{"size":696,"mtime":1631007768221,"results":"74","hashOfConfig":"53"},{"size":818,"mtime":1631007762352,"results":"75","hashOfConfig":"53"},{"size":737,"mtime":1631007756545,"results":"76","hashOfConfig":"53"},{"size":818,"mtime":1631007762352,"results":"77","hashOfConfig":"53"},{"size":696,"mtime":1631007768221,"results":"78","hashOfConfig":"53"},{"size":737,"mtime":1631007756545,"results":"79","hashOfConfig":"53"},{"size":556,"mtime":1631007773814,"results":"80","hashOfConfig":"53"},{"size":553,"mtime":1631007778602,"results":"81","hashOfConfig":"53"},{"size":3955,"mtime":1631016136558,"results":"82","hashOfConfig":"53"},{"size":3454,"mtime":1631016136558,"results":"83","hashOfConfig":"53"},{"size":3957,"mtime":1631014714074,"results":"84","hashOfConfig":"53"},{"size":168,"mtime":1631009137313,"results":"85","hashOfConfig":"53"},{"size":4843,"mtime":1631016158772,"results":"86","hashOfConfig":"53"},{"size":1845,"mtime":1631016136532,"results":"87","hashOfConfig":"53"},{"size":2573,"mtime":1631016136532,"results":"88","hashOfConfig":"53"},{"size":1172,"mtime":1631014775097,"results":"89","hashOfConfig":"53"},{"size":2922,"mtime":1631014882982,"results":"90","hashOfConfig":"53"},{"size":2407,"mtime":1631019160650,"results":"91","hashOfConfig":"53"},{"size":2628,"mtime":1631017127920,"results":"92","hashOfConfig":"53"},{"size":605,"mtime":1627851922000,"results":"93","hashOfConfig":"53"},{"size":1621,"mtime":1631016725599,"results":"94","hashOfConfig":"53"},{"size":815,"mtime":1631016725599,"results":"95","hashOfConfig":"53"},{"size":1133,"mtime":1631016725599,"results":"96","hashOfConfig":"53"},{"size":3742,"mtime":1631080003631,"results":"97","hashOfConfig":"53"},{"size":1455,"mtime":1631018423129,"results":"98","hashOfConfig":"53"},{"size":3080,"mtime":1631024329449,"results":"99","hashOfConfig":"53"},{"size":3698,"mtime":1631086557620,"results":"100","hashOfConfig":"53"},{"size":316,"mtime":1631103294297,"results":"101","hashOfConfig":"53"},{"size":2877,"mtime":1631096787174,"results":"102","hashOfConfig":"53"},{"size":2902,"mtime":1631104717464,"results":"103","hashOfConfig":"53"},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},"u3x1pr",{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"106"},{"filePath":"116","messages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"118","messages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"106"},{"filePath":"121","messages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"123","messages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"125","messages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"106"},{"filePath":"128","messages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"130","messages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"132","messages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"134","messages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"136","messages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"138","messages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"140","messages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"142","messages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"144","messages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"146","messages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"148","messages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"150","messages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"152","messages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"154","messages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"156","messages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"158","messages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"160","messages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"162","messages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"164","messages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"166","messages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"106"},{"filePath":"169","messages":"170","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"106"},{"filePath":"172","messages":"173","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"106"},{"filePath":"175","messages":"176","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"177","messages":"178","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"106"},{"filePath":"180","messages":"181","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"182","messages":"183","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"184","messages":"185","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"186","messages":"187","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"106"},{"filePath":"189","messages":"190","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191","usedDeprecatedRules":"106"},{"filePath":"192","messages":"193","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194","usedDeprecatedRules":"106"},{"filePath":"195","messages":"196","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"197","messages":"198","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"199","messages":"200","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"201","messages":"202","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"203","messages":"204","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205","usedDeprecatedRules":"106"},{"filePath":"206","messages":"207","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208","usedDeprecatedRules":"106"},{"filePath":"209","messages":"210","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"211","usedDeprecatedRules":"106"},{"filePath":"212","messages":"213","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"214","usedDeprecatedRules":"106"},{"filePath":"215","messages":"216","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"217","messages":"218","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"219","messages":"220","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Nath's\\Documents\\SilkRoad\\portal\\src\\index.js",[],["221","222"],"C:\\Users\\Nath's\\Documents\\SilkRoad\\portal\\src\\reportWebVitals.js",[],"C:\\Users\\Nath's\\Documents\\SilkRoad\\portal\\src\\App.js",[],"C:\\Users\\Nath's\\Documents\\SilkRoad\\portal\\src\\routes\\AppRoutes.js",[],"C:\\Users\\Nath's\\Documents\\SilkRoad\\portal\\src\\common\\providers\\AuthProvider.js",["223"],"import React, { useEffect, useState, useCallback, createContext } from 'react';\r\nimport Cookies from 'universal-cookie';\r\nimport SessionExpired from '../components/SessionExpired';\r\n\r\nexport const AuthContext = createContext({\r\n    authState: null,\r\n    addAuth: () => { },\r\n    removeAuth: () => { }\r\n});\r\n\r\nexport default function AuthProvider({ children }) {\r\n    const cookies = new Cookies();\r\n    const token = cookies.get('token');\r\n    const anonymousPaths = ['/', '/forgot-password', '/register', '/login'];\r\n\r\n    const [authState, setAuthState] = useState({ status: 'success', error: null, user: null });\r\n\r\n    console.log(window.location.pathname);\r\n\r\n    useEffect(() => {\r\n        console.log('Called');\r\n        if (token) {\r\n            const user = {\r\n                roles: cookies.get('roles'),\r\n                phone: cookies.get('phone'),\r\n                lastName: cookies.get('lastName'),\r\n                firstName: cookies.get('firstName'),\r\n                email: cookies.get('email'),\r\n                token: token\r\n            };\r\n            setAuthState({ status: 'success', error: null, user })\r\n        } else {\r\n            setAuthState({ status: 'error', error: { message: 'Invalid user session' }, user: null });\r\n        }\r\n    }, []);\r\n\r\n    const addAuth = ({ error, user, status }) => {\r\n        console.log('provider', { error, user, status });\r\n        setAuthState({ error, user, status });\r\n    };\r\n\r\n    const removeAuth = () => {\r\n        setAuthState({ status: 'error', error: { message: 'Invalid user session' }, user: null })\r\n    };\r\n\r\n    const contextValue = {\r\n        authState,\r\n        addAuth: useCallback(({ error, user, status }) => addAuth({ error, user, status }), []),\r\n        removeAuth: useCallback(() => removeAuth(), [])\r\n    };\r\n\r\n    const handleBackToLogin = (e) => {\r\n        window.location.replace('/');\r\n        e.preventDefault();\r\n    }\r\n\r\n    const getComponent = () => {\r\n        if (authState.status === 'pending') {\r\n            return 'Loading...'\r\n        }\r\n        if (authState.status === 'error' && anonymousPaths.indexOf(window.location.pathname) === -1) {\r\n            return (<SessionExpired message={authState.error?.message || 'Please login again.'} handleBackToLogin={handleBackToLogin}/>);\r\n        }\r\n        if (authState.status === 'success' && !authState.user) {\r\n            return (<SessionExpired message={authState.error?.message || 'Please login again.'} handleBackToLogin={handleBackToLogin}/>);\r\n        }\r\n        if (authState.status === 'error' && anonymousPaths.indexOf(window.location.pathname) !== -1) {\r\n            return children;\r\n        }\r\n        if (authState.status === 'success' && authState.user) {\r\n            return children;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <AuthContext.Provider value={contextValue}>\r\n            {getComponent()}\r\n        </AuthContext.Provider>\r\n    )\r\n}","C:\\Users\\Nath's\\Documents\\SilkRoad\\portal\\src\\pages\\NotFound.js",[],"C:\\Users\\Nath's\\Documents\\SilkRoad\\portal\\src\\pages\\ForgotPassword.js",["224","225"],"import React, { useState } from 'react';\r\nimport { Container, Link, Hidden, Button } from '@material-ui/core';\r\nimport Notiflix from \"notiflix\";\r\nimport { useMutation, gql } from '@apollo/client';\r\nimport AppForms from '../common/components/AppForms';\r\n\r\nimport \"./styles/login.scss\";\r\n\r\nconst AUTHENTICATE = gql`\r\n      mutation ($userId: String!, $password: String!){\r\n        authenticate(userId: $userId, password: $password) {\r\n            firstName\r\n            token\r\n            lastName\r\n            emailVerified\r\n            middleName\r\n            organizationId\r\n            phone\r\n            phoneVerified\r\n            roles\r\n            username\r\n            email\r\n        }\r\n      }\r\n    `\r\n\r\nconst formSchema = {\r\n    type: \"object\",\r\n    required: [\r\n        \"email\"\r\n    ],\r\n    properties: {\r\n        email: {\r\n            type: \"string\",\r\n            title: \"Email\",\r\n        }\r\n    }\r\n};\r\n\r\nconst uiSchema = {\r\n    \"email\": {\r\n        \"ui:autofocus\": true,\r\n        \"ui:autocomplete\": \"email\",\r\n        \"ui:gridSm\": 12,\r\n        \"ui:options\": {\r\n            \"inputType\": \"email\"\r\n        }\r\n    }\r\n};\r\n\r\nfunction ForgotPassword() {\r\n    const [formData, setFormData] = useState(null);\r\n    const [userLogin, { loading, data, error }] = useMutation(AUTHENTICATE, {\r\n        onError: (err) => {\r\n            Notiflix.Notify.failure('Invalid credentials please try again.', { position: \"right-bottom\", });\r\n        }\r\n    });\r\n\r\n    if (loading) {\r\n        Notiflix.Loading.dots();\r\n    }\r\n\r\n    if (data) {\r\n\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        console.log(formData);\r\n    }\r\n\r\n    return (\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n            <Hidden smDown>\r\n                <div id=\"background-img\" className=\"login-image\" ></div>\r\n            </Hidden>\r\n            <div className=\"login-base-container\">\r\n                <h1>{process.env.REACT_APP_NAME}</h1>\r\n                <AppForms\r\n                    className=\"login-form\"\r\n                    schema={formSchema}\r\n                    uiSchema={uiSchema}\r\n                    formData={formData}\r\n                    spacing={3}\r\n                    onChange={e => setFormData(e.formData)}\r\n                    onSubmit={handleSubmit}>\r\n                    <Button type={\"submit\"} variant=\"contained\" color=\"primary\" fullWidth className=\"login-button\">Retrieve Password</Button>\r\n                </AppForms>\r\n                <Link href=\"/login\" variant=\"body2\">\r\n                    Back to Login\r\n                </Link>\r\n                <Link href=\"/register\" className=\"register-link\" variant=\"body2\">\r\n                    Register\r\n                </Link>\r\n            </div>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default ForgotPassword\r\n","C:\\Users\\Nath's\\Documents\\SilkRoad\\portal\\src\\common\\components\\SessionExpired.js",[],"C:\\Users\\Nath's\\Documents\\SilkRoad\\portal\\src\\common\\translations\\i18n.js",[],"C:\\Users\\Nath's\\Documents\\SilkRoad\\portal\\src\\pages\\Login.js",["226"],"import React, { useState } from 'react';\r\nimport { Container, Button, Link, Hidden } from '@material-ui/core';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Cookies from 'universal-cookie';\r\nimport Notiflix from \"notiflix\";\r\nimport { useMutation, gql } from '@apollo/client';\r\nimport useAuthState from '../common/hooks/useAuthState';\r\nimport AppForms from '../common/components/AppForms';\r\n\r\nimport \"./styles/login.scss\";\r\n\r\nconst AUTHENTICATE = gql`\r\n      mutation ($userId: String!, $password: String!){\r\n        authenticate(userId: $userId, password: $password) {\r\n            firstName\r\n            token\r\n            lastName\r\n            emailVerified\r\n            middleName\r\n            organizationId\r\n            phone\r\n            phoneVerified\r\n            roles\r\n            username\r\n            email\r\n        }\r\n      }\r\n    `\r\n\r\nconst formSchema = {\r\n    type: \"object\",\r\n    required: [\r\n        \"email\",\r\n        \"password\"\r\n    ],\r\n    properties: {\r\n        email: {\r\n            type: \"string\",\r\n            title: \"Email\",\r\n        },\r\n        password: {\r\n            type: \"string\",\r\n            title: \"Password\",\r\n        }\r\n    }\r\n};\r\n\r\nconst uiSchema = {\r\n    \"email\": {\r\n        \"ui:autofocus\": true,\r\n        \"ui:autocomplete\": \"email\",\r\n        \"ui:options\": {\r\n            \"inputType\": \"email\"\r\n        }\r\n    },\r\n    \"password\": {\r\n        \"ui:widget\": \"password\"\r\n    }\r\n};\r\n\r\nfunction Login() {\r\n    const cookies = new Cookies();\r\n    const history = useHistory();\r\n    const { addAuth } = useAuthState();\r\n    const [formData, setFormData] = useState(null);\r\n    const [userLogin, { loading, data, error }] = useMutation(AUTHENTICATE, {\r\n        onError: (err) => {\r\n            Notiflix.Notify.failure('Invalid credentials please try again.', { position: \"right-bottom\", });\r\n        }\r\n    });\r\n\r\n    if (loading) {\r\n        Notiflix.Loading.dots();\r\n    }\r\n\r\n    if (data) {\r\n        // console.log(data.authenticate);\r\n        for (const res in data.authenticate) {\r\n            cookies.set(res, data.authenticate[res], { path: '/' });\r\n        }\r\n        console.log(cookies.get('roles'), history);\r\n        const user = {\r\n            roles: cookies.get('roles'),\r\n            phone: cookies.get('phone'),\r\n            lastName: cookies.get('lastName'),\r\n            firstName: cookies.get('firstName'),\r\n            email: cookies.get('email'),\r\n            token: cookies.get('token')\r\n        };\r\n        addAuth({ status: 'success', error: null, user });\r\n        Notiflix.Loading.remove(300);\r\n        history.replace('/app');\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        console.log(formData);\r\n        userLogin({ variables: { 'userId': formData.email, 'password': formData.password } });\r\n    }\r\n\r\n    return (\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n            <Hidden smDown>\r\n                <div id=\"background-img\" className=\"login-image\" ></div>\r\n            </Hidden>\r\n            <div className=\"login-base-container\">\r\n                <h1>{process.env.REACT_APP_NAME}</h1>\r\n                <AppForms\r\n                    className=\"login-form\"\r\n                    schema={formSchema}\r\n                    uiSchema={uiSchema}\r\n                    formData={formData}\r\n                    spacing={3}\r\n                    onChange={e => setFormData(e.formData)}\r\n                    onSubmit={handleSubmit}>\r\n                    <Button type={\"submit\"} variant=\"contained\" color=\"primary\" fullWidth className=\"login-button\">Login</Button>\r\n                </AppForms>\r\n                <Link href=\"/forgot-password\" variant=\"body2\">\r\n                    Forgot password?\r\n                </Link>\r\n                <Link href=\"/register\" className=\"register-link\" variant=\"body2\">\r\n                    Register\r\n                </Link>\r\n            </div>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","C:\\Users\\Nath's\\Documents\\SilkRoad\\portal\\src\\common\\hooks\\useAuthState.js",[],"C:\\Users\\Nath's\\Documents\\SilkRoad\\portal\\src\\pages\\Dashboard\\index.js",[],"C:\\Users\\Nath's\\Documents\\SilkRoad\\portal\\src\\common\\layouts\\AppLayout.js",[],"C:\\Users\\Nath's\\Documents\\SilkRoad\\portal\\src\\pages\\Dashboard\\components\\DashboardCard.js",[],"C:\\Users\\Nath's\\Documents\\SilkRoad\\portal\\src\\pages\\Dashboard\\components\\Charts.js",[],"C:\\Users\\Nath's\\Documents\\SilkRoad\\portal\\src\\common\\components\\Header.js",[],"C:\\Users\\Nath's\\Documents\\SilkRoad\\portal\\src\\common\\components\\Drawer.js",[],"C:\\Users\\Nath's\\Documents\\SilkRoad\\portal\\src\\common\\components\\DrawerList.js",[],"C:\\Users\\Nath's\\Documents\\SilkRoad\\portal\\src\\pages\\Profile\\index.js",[],"C:\\Users\\Nath's\\Documents\\SilkRoad\\portal\\src\\pages\\Profile\\components\\profilePassword.js",[],"C:\\Users\\Nath's\\Documents\\SilkRoad\\portal\\src\\pages\\Profile\\components\\profilePayments.js",[],"C:\\Users\\Nath's\\Documents\\SilkRoad\\portal\\src\\pages\\Profile\\components\\profileCompanyDetails.js",[],"C:\\Users\\Nath's\\Documents\\SilkRoad\\portal\\src\\pages\\Profile\\components\\profileBasicInfo.js",[],"C:\\Users\\Nath's\\Documents\\SilkRoad\\portal\\src\\pages\\Profile\\components\\profileAddress.js",[],"C:\\Users\\Nath's\\Documents\\SilkRoad\\portal\\src\\pages\\Profile\\components\\ProfileBasicInfo.js",[],"C:\\Users\\Nath's\\Documents\\SilkRoad\\portal\\src\\pages\\Profile\\components\\ProfileCompanyDetails.js",[],"C:\\Users\\Nath's\\Documents\\SilkRoad\\portal\\src\\pages\\Profile\\components\\ProfileAddress.js",[],"C:\\Users\\Nath's\\Documents\\SilkRoad\\portal\\src\\pages\\Profile\\components\\ProfilePassword.js",[],"C:\\Users\\Nath's\\Documents\\SilkRoad\\portal\\src\\pages\\Profile\\components\\ProfilePayments.js",[],"C:\\Users\\Nath's\\Documents\\SilkRoad\\portal\\src\\components\\GenericTableView\\components\\GenericTableBody.js",["227","228","229"],"import React from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport { IconButton, TableRow, TableCell, TableBody, Tooltip, Icon } from '@material-ui/core';\r\n\r\nimport './table.scss';\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n    if (b[orderBy] < a[orderBy]) {\r\n        return -1;\r\n    }\r\n    if (b[orderBy] > a[orderBy]) {\r\n        return 1;\r\n    }\r\n    return 0;\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n    const stabilizedThis = array.map((el, index) => [el, index]);\r\n    stabilizedThis.sort((a, b) => {\r\n        const order = comparator(a[0], b[0]);\r\n        if (order !== 0) return order;\r\n        return a[1] - b[1];\r\n    });\r\n    return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n    return order === 'desc'\r\n        ? (a, b) => descendingComparator(a, b, orderBy)\r\n        : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction GenericTableBody(props) {\r\n    const history = useHistory();\r\n\r\n    const handleViewClicked = (event, path, id) => {\r\n        if (path.startsWith(\"dialog::\")) {\r\n            // Show dialog\r\n        } else if (path.startsWith(\"delete::\")) {\r\n            props.handleDeleteOpen(path.split(\"::\")[1]);\r\n        } else {\r\n            console.log(path, id);\r\n            history.push(path.replace('${' + props.tableKey + '}', id));\r\n        }\r\n        event.preventDefault();\r\n    };\r\n\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n    const handleMenuClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    return (\r\n        <TableBody>\r\n            {\r\n                stableSort(props.data, getComparator(props.order, props.orderBy))\r\n                    .slice(props.page * props.rowsPerPage, props.page * props.rowsPerPage + props.rowsPerPage)\r\n                    .map((row, index) => {\r\n                        const rowId = row[props.tableKey]\r\n                        return (\r\n                            <TableRow\r\n                                tabIndex={-1}\r\n                                key={index}>\r\n                                {\r\n                                    props.columnDefs.map((item, index) => {\r\n                                        return (<TableCell align=\"center\" key={index}>{row[item.id]}</TableCell>)\r\n                                    })\r\n                                }\r\n                                <TableCell>\r\n                                    <div className=\"table-options-contianer\">\r\n                                        {\r\n                                            props.optionsConfig.map((item, index) => {\r\n                                                return (\r\n                                                    <Tooltip title={item.label} aria-label={item.label}>\r\n                                                        <IconButton onClick={(e) => handleViewClicked(e, item.path, rowId)} key={index}>\r\n                                                            <Icon fontSize=\"small\">{item.icon}</Icon>\r\n                                                        </IconButton>\r\n                                                    </Tooltip>\r\n                                                )\r\n                                            })\r\n                                        }\r\n                                    </div>\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        );\r\n                    })\r\n            }\r\n            {\r\n                props.emptyRows > 0 && (\r\n                    <TableRow style={{ height: 53 * props.emptyRows }}>\r\n                        <TableCell colSpan={props.columnDefs.length + 1}>\r\n                        </TableCell>\r\n                    </TableRow>\r\n                )\r\n            }\r\n        </TableBody>\r\n    )\r\n}\r\n\r\nexport default GenericTableBody\r\n","C:\\Users\\Nath's\\Documents\\SilkRoad\\portal\\src\\components\\GenericTableView\\index.js",["230","231","232","233"],"import React, { useEffect } from 'react'\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport Fab from '@material-ui/core/Fab';\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\n\r\nimport AppLayout from '../../common/layouts/AppLayout';\r\nimport AppTable from './components/Table';\r\nimport { getPageConfig } from './tableConfigurations';\r\nimport CreationTypeDialog from '../../modals/CreationTypeDialog';\r\nimport Notiflix from \"notiflix\";\r\n\r\nimport './tableView.scss';\r\n\r\nconst getDialogComponent = (name, { open, handleClose, handleDismiss }) => {\r\n    switch (name) {\r\n        case 'CreationTypeDialog':\r\n            return (<CreationTypeDialog open={open} handleClose={handleClose} handleDismiss={handleDismiss} />);\r\n    }\r\n}\r\n\r\nfunction GenericTableView(props) {\r\n    const history = useHistory();\r\n    const pageConfig = getPageConfig(props.type);\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n    const [tableType, setTableType] = React.useState('');\r\n    const [tableData, setTableData] = React.useState([]);\r\n    const [tableLoading, setTableLoading] = React.useState(false);\r\n\r\n    useEffect(() => {\r\n        if (tableType !== props.type) {\r\n            setTableType(props.type);\r\n            setTableLoading(true);\r\n            setTableData([]);\r\n            // pageConfig.dataSource({}, (isError, resp) => {\r\n            //     if (!isError) {\r\n            //         setTableData(resp.result);\r\n            //     }\r\n            // });\r\n            setTableLoading(false);\r\n        } else {\r\n            console.log('same', pageConfig);\r\n        }\r\n    }, [props]);\r\n\r\n    const handleNewItemCreation = (event) => {\r\n        if (pageConfig.addPath.startsWith(\"dialog::\")) {\r\n            setOpen(true);\r\n        } else {\r\n            history.push(pageConfig.addPath)\r\n        }\r\n        event.preventDefault();\r\n    }\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n        // Refresh table data\r\n        setTableLoading(true);\r\n        setTableData([]);\r\n        // pageConfig.dataSource({}, (resp) => {\r\n        //     setTableData(resp.result);\r\n        // });\r\n        setTableLoading(false);\r\n    };\r\n\r\n    const handleDismiss = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const handleUpdate = () => {\r\n\r\n    };\r\n\r\n    return (\r\n        <AppLayout headerTitle={pageConfig.pageTitle} showHamburger={true}>\r\n            <AppTable\r\n                tableTitle={pageConfig.tableTitle}\r\n                deleteMultiple={pageConfig.deleteMultiple}\r\n                showFilters={pageConfig.showFilters}\r\n                tableKey={pageConfig.tableKey}\r\n                columnDefs={pageConfig.columns}\r\n                tableData={tableData}\r\n                optionsConfig={pageConfig.optionsConfig}\r\n                deleteDialogTitle={pageConfig.deleteDialogTitle}\r\n                deleteDialogDesc={pageConfig.deleteDialogDesc}\r\n                onUpdateCallback={handleUpdate} />\r\n            {\r\n                pageConfig.showAdd ? (\r\n                    <Fab variant=\"extended\" className=\"add-button-style\" onClick={handleNewItemCreation}>\r\n                        <AddCircleIcon />\r\n                        {pageConfig.addLabel}\r\n                    </Fab>\r\n                ) : null\r\n            }\r\n            {\r\n                getDialogComponent(pageConfig.addPath.split('::')[1], { open, handleClose, handleDismiss })\r\n            }\r\n        </AppLayout>\r\n    )\r\n}\r\n\r\nexport default GenericTableView\r\n","C:\\Users\\Nath's\\Documents\\SilkRoad\\portal\\src\\components\\GenericTableView\\tableConfigurations.js",["234","235","236","237","238","239","240","241","242","243","244","245","246"],"import { gql } from '@apollo/client';\r\n\r\nconst orderTable = {\r\n    pageTitle: process.env.REACT_APP_NAME,\r\n    tableTitle: 'My Orders',\r\n    dataSource: '',\r\n    showFilters: true,\r\n    showAdd: true,\r\n    deleteMultiple: false,\r\n    addLabel: 'New Order',\r\n    addPath: 'dialog::CreationTypeDialog',\r\n    tableKey: 'orderNumber',\r\n    deleteDialogTitle: 'Delete Order',\r\n    deleteDialogDesc: 'Are you sure you want to delete this order?',\r\n    columns: [\r\n        { id: 'orderNumber', label: 'Order Number' },\r\n        { id: 'orderDate', label: 'Date' },\r\n        { id: 'vendorName', label: 'Vendor Name' },\r\n        { id: 'totalAmount', label: 'Amount' },\r\n        { id: 'orderStatus', label: 'Status' },\r\n    ],\r\n    optionsConfig: [\r\n        { path: '/app/order/${orderNumber}', label: 'View', icon: 'visibility' },\r\n        { path: '/app/order/${orderNumber}', label: 'Edit', icon: 'edit' },\r\n        { path: 'delete::/app/order/${orderNumber}', label: 'Delete', icon: 'delete' },\r\n    ]\r\n};\r\n\r\nconst businessTable = {\r\n    pageTitle: process.env.REACT_APP_NAME,\r\n    tableTitle: 'My Businesses',\r\n    dataSource: '',\r\n    showFilters: false,\r\n    showAdd: true,\r\n    deleteMultiple: false,\r\n    addLabel: 'Add Business',\r\n    addPath: '/app/business',\r\n    tableKey: 'businessId',\r\n    deleteDialogTitle: 'Delete Business',\r\n    deleteDialogDesc: 'Are you sure you want to delete this business?',\r\n    columns: [\r\n        { id: 'businessId', label: 'Business Id' },\r\n        { id: 'name', label: 'Name' },\r\n        { id: 'email', label: 'Email' },\r\n        { id: 'phone', label: 'Phone Number' },\r\n        { id: 'pan', label: 'PAN' }\r\n    ],\r\n    optionsConfig: [\r\n        { path: '/app/business/${businessId}', label: 'View', icon: 'visibility' },\r\n        { path: '/app/business/${businessId}/edit', label: 'Edit', icon: 'edit' },\r\n        { path: 'delete::/app/business/${businessId}', label: 'Delete', icon: 'delete' },\r\n    ]\r\n};\r\n\r\nconst userTable = {\r\n    pageTitle: process.env.REACT_APP_NAME,\r\n    tableTitle: 'My Users',\r\n    dataSource: '',\r\n    showFilters: false,\r\n    showAdd: true,\r\n    deleteMultiple: false,\r\n    addLabel: 'Add User',\r\n    addPath: '/app/user',\r\n    tableKey: 'email',\r\n    deleteDialogTitle: 'Delete User',\r\n    deleteDialogDesc: 'Are you sure you want to delete this user?',\r\n    columns: [\r\n        { id: 'firstName', label: 'First Name' },\r\n        { id: 'lastName', label: 'Last Name' },\r\n        { id: 'email', label: 'Email' },\r\n        { id: 'phone', label: 'Phone Number' }\r\n    ],\r\n    optionsConfig: [\r\n        { path: '/app/user/${email}', label: 'View', icon: 'visibility' },\r\n        { path: '/app/user/${email}/edit', label: 'Edit', icon: 'edit' },\r\n        { path: 'delete::/app/user/${email}', label: 'Delete', icon: 'delete' },\r\n    ]\r\n};\r\n\r\nconst rulesTable = {\r\n    pageTitle: process.env.REACT_APP_NAME,\r\n    tableTitle: 'My Automation Rules',\r\n    dataSource: '',\r\n    showFilters: false,\r\n    showAdd: true,\r\n    deleteMultiple: false,\r\n    addLabel: 'Add Rule',\r\n    addPath: '/',\r\n    tableKey: 'name',\r\n    deleteDialogTitle: 'Delete Rule',\r\n    deleteDialogDesc: 'Are you sure you want to delete this rule?',\r\n    columns: [\r\n        { id: 'name', label: 'Name' },\r\n        { id: 'ruleType', label: 'Rule For' },\r\n        { id: 'status', label: 'Status' }\r\n    ],\r\n    optionsConfig: [\r\n        { path: '/app/order/${orderNumber}', label: 'View', icon: 'visibility' },\r\n        { path: '/app/order/${orderNumber}', label: 'Edit', icon: 'edit' },\r\n        { path: 'delete::/app/order/${orderNumber}', label: 'Delete', icon: 'delete' },\r\n    ]\r\n};\r\n\r\nexport const getPageConfig = (type) => {\r\n    switch (type) {\r\n        case 'order':\r\n            return orderTable;\r\n        case 'business':\r\n            return businessTable;\r\n        case 'rules':\r\n            return rulesTable;\r\n        case 'users':\r\n            return userTable;\r\n        default:\r\n            return null;\r\n    }\r\n}","C:\\Users\\Nath's\\Documents\\SilkRoad\\portal\\src\\modals\\CreationTypeDialog.js",[],"C:\\Users\\Nath's\\Documents\\SilkRoad\\portal\\src\\components\\GenericTableView\\components\\Table.js",["247"],"import React from 'react';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Paper, TablePagination, TableContainer, Table } from '@material-ui/core';\r\n\r\nimport TableHeader from './TableHeader';\r\nimport TableToolbar from './TableToolbar';\r\nimport GenericTableBody from './GenericTableBody';\r\nimport TableGenericDeleteDialog from './TableGenericDeleteDialog';\r\nimport './table.scss';\r\n\r\nlet rows = [];\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n    },\r\n    paper: {\r\n        width: '100%',\r\n        marginBottom: theme.spacing(2),\r\n    },\r\n    table: {\r\n        minWidth: 750,\r\n    },\r\n    visuallyHidden: {\r\n        border: 0,\r\n        clip: 'rect(0 0 0 0)',\r\n        height: 1,\r\n        margin: -1,\r\n        overflow: 'hidden',\r\n        padding: 0,\r\n        position: 'absolute',\r\n        top: 20,\r\n        width: 1,\r\n    },\r\n}));\r\n\r\nfunction AppTable(props) {\r\n    const classes = useStyles();\r\n    const [order, setOrder] = React.useState('asc');\r\n    const [orderBy, setOrderBy] = React.useState(props.tableKey);\r\n    const [page, setPage] = React.useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n    const [openTableDeletDialog, setOpenTableDeletDialog] = React.useState(false);\r\n\r\n    if (props.tableData) {\r\n        rows = props.tableData;\r\n    }\r\n\r\n    const handleRequestSort = (event, property) => {\r\n        const isAsc = orderBy === property && order === 'asc';\r\n        setOrder(isAsc ? 'desc' : 'asc');\r\n        setOrderBy(property);\r\n    };\r\n\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(parseInt(event.target.value, 10));\r\n        setPage(0);\r\n    };\r\n\r\n    const handleDeleteDialogOpen = (path) => {\r\n        console.log(path);\r\n        setOpenTableDeletDialog(true);\r\n    };\r\n\r\n    const handleDeleteDialogClose = () => {\r\n        setOpenTableDeletDialog(false);\r\n    };\r\n\r\n    const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Paper className={classes.paper}>\r\n                <TableToolbar tableTitle={props.tableTitle} showFilters={props.showFilters} />\r\n                {\r\n                    (rows.length > 0) ? (\r\n                        <>\r\n                            <TableContainer>\r\n                                <Table className={classes.table} aria-labelledby=\"tableTitle\" size=\"medium\" aria-label=\"enhanced table\" >\r\n                                    <TableHeader\r\n                                        classes={classes}\r\n                                        order={order}\r\n                                        orderBy={orderBy}\r\n                                        onRequestSort={handleRequestSort}\r\n                                        columnDefs={props.columnDefs} />\r\n                                    <GenericTableBody\r\n                                        data={rows}\r\n                                        emptyRows={emptyRows}\r\n                                        columnDefs={props.columnDefs}\r\n                                        page={page}\r\n                                        rowsPerPage={rowsPerPage}\r\n                                        optionsConfig={props.optionsConfig}\r\n                                        tableKey={props.tableKey}\r\n                                        order={order}\r\n                                        orderBy={orderBy}\r\n                                        handleDeleteOpen={handleDeleteDialogOpen} />\r\n                                </Table>\r\n                            </TableContainer>\r\n                            <TablePagination\r\n                                rowsPerPageOptions={[10, 15, 20]}\r\n                                component=\"div\"\r\n                                count={rows.length}\r\n                                rowsPerPage={rowsPerPage}\r\n                                page={page}\r\n                                onPageChange={handleChangePage}\r\n                                onRowsPerPageChange={handleChangeRowsPerPage}\r\n                            />\r\n                        </>\r\n                    ) : (\r\n                        <div className=\"table-no-data\">\r\n                            <img src={\"../images/nodata.svg\"} className=\"table-no-data-image\" />\r\n                            <p className=\"table-no-data-label\">No Data Found</p>\r\n                        </div>\r\n                    )\r\n                }\r\n            </Paper>\r\n            <TableGenericDeleteDialog open={openTableDeletDialog} handleClose={handleDeleteDialogClose} title={props.deleteDialogTitle} details={props.deleteDialogDesc} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AppTable\r\n","C:\\Users\\Nath's\\Documents\\SilkRoad\\portal\\src\\components\\GenericTableView\\components\\TableHeader.js",[],"C:\\Users\\Nath's\\Documents\\SilkRoad\\portal\\src\\components\\GenericTableView\\components\\TableToolbar.js",[],"C:\\Users\\Nath's\\Documents\\SilkRoad\\portal\\src\\components\\GenericTableView\\components\\TableGenericDeleteDialog.js",[],"C:\\Users\\Nath's\\Documents\\SilkRoad\\portal\\src\\components\\GenericTableView\\filters\\OrdersFilterView.js",["248"],"import React from 'react';\r\n\r\nimport { Typography, Button, TextField, MenuItem, Grid } from '@material-ui/core';\r\n\r\nimport './tableFilters.scss';\r\n\r\nfunction OrdersFilterView(props) {\r\n\r\n    const handleChange = (event) => {\r\n\r\n    };\r\n\r\n    const handleFilterFormSubmit = (event) => {\r\n        \r\n    };\r\n\r\n    const handleFilterFormReset = (event) => {\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"table-filter-container\">\r\n            <Typography paragraph>Filter By:</Typography>\r\n            <form noValidate autoComplete=\"off\" className=\"form-container\" onSubmit={handleFilterFormSubmit} onReset={handleFilterFormReset}>\r\n                <Grid container spacing={2}>\r\n                    <Grid item xs={12} sm={3}>\r\n                        <TextField\r\n                            id=\"from-date\"\r\n                            label=\"From\"\r\n                            type=\"date\"\r\n                            variant=\"outlined\"\r\n                            fullWidth\r\n                            InputLabelProps={{\r\n                                shrink: true,\r\n                            }} />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={3}>\r\n                        <TextField\r\n                            id=\"to-date\"\r\n                            label=\"To\"\r\n                            type=\"date\"\r\n                            variant=\"outlined\"\r\n                            fullWidth\r\n                            disabled\r\n                            helperText=\"Enter From date to enable.\"\r\n                            InputLabelProps={{\r\n                                shrink: true,\r\n                            }} />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={3}>\r\n                        <TextField id=\"filter-text\" label=\"Vendor Name\" variant=\"outlined\" fullWidth/>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={3}>\r\n                        <TextField\r\n                            id=\"filter-select\"\r\n                            select\r\n                            label=\"Status\"\r\n                            onChange={handleChange}\r\n                            helperText=\"Select the order status.\"\r\n                            fullWidth\r\n                            variant=\"outlined\">\r\n                            {/* {getOrderStatuses().map((option) => (\r\n                                <MenuItem key={option.value} value={option.value}>\r\n                                    {option.label}\r\n                                </MenuItem>\r\n                            ))} */}\r\n                        </TextField>\r\n                    </Grid>\r\n                </Grid>\r\n                <Button className=\"form-search-btn\" type=\"submit\">Search</Button>\r\n                <Button className=\"form-reset-btn\" type=\"reset\">Reset</Button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default OrdersFilterView\r\n","C:\\Users\\Nath's\\Documents\\SilkRoad\\portal\\src\\pages\\ManageBusiness\\index.js",["249","250","251","252","253","254","255","256","257","258","259","260","261"],"import { React, useEffect, useState } from 'react';\r\nimport { Button, Grid, TextField, CssBaseline, MenuItem, Container } from '@material-ui/core';\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport Form from \"@rjsf/material-ui\";\r\nimport { useMutation, gql } from '@apollo/client';\r\nimport Notiflix from \"notiflix\";\r\nimport AppLayout from '../../common/layouts/AppLayout';\r\n\r\nimport './manageBusiness.scss';\r\n\r\nconst MUTATE_BUSINESS = gql`\r\n      mutation ($userId: String!, $password: String!){\r\n        authenticate(userId: $userId, password: $password) {\r\n            firstName\r\n            token\r\n            lastName\r\n            emailVerified\r\n            middleName\r\n            organizationId\r\n            phone\r\n            phoneVerified\r\n            roles\r\n            username\r\n            email\r\n        }\r\n      }\r\n    `\r\n\r\nconst formSchema = {\r\n    title: \"Login\",\r\n    type: \"object\",\r\n    required: [\r\n        \"email\",\r\n        \"password\"\r\n    ],\r\n    properties: {\r\n        email: {\r\n            type: \"string\",\r\n            title: \"Email\",\r\n        },\r\n        password: {\r\n            type: \"string\",\r\n            title: \"Password\",\r\n        }\r\n    }\r\n};\r\n\r\nconst uiSchema = {\r\n    \"email\": {\r\n        \"ui:autofocus\": true,\r\n        \"ui:autocomplete\": \"email\",\r\n        \"ui:options\": {\r\n            \"inputType\": \"email\"\r\n        }\r\n    },\r\n    \"password\": {\r\n        \"ui:widget\": \"password\"\r\n    }\r\n};\r\n\r\nfunction ManageBusiness(props) {\r\n    let { businessId } = useParams();\r\n    const history = useHistory();\r\n    const [formData, setFormData] = useState(null);\r\n    const [userLogin, { loading, data, error }] = useMutation(MUTATE_BUSINESS, {\r\n        onError: (err) => {\r\n            Notiflix.Notify.failure('Invalid credentials please try again.', { position: \"right-bottom\", });\r\n        }\r\n    });\r\n\r\n    const handleSubmit = (e) => {\r\n        console.log(formData);\r\n        // userLogin({ variables: { 'userId': formData.email, 'password': formData.password } });\r\n    }\r\n\r\n    return (\r\n        <AppLayout headerTitle={process.env.REACT_APP_NAME} showBack=\"true\">\r\n            <Form\r\n                schema={formSchema}\r\n                uiSchema={uiSchema}\r\n                formData={formData}\r\n                onChange={e => setFormData(e.formData)}\r\n                onSubmit={handleSubmit} />\r\n        </AppLayout>\r\n    )\r\n}\r\n\r\nexport default ManageBusiness\r\n","C:\\Users\\Nath's\\Documents\\SilkRoad\\portal\\src\\pages\\BusinessDetails\\index.js",["262","263"],"import React, { useEffect } from 'react';\r\nimport Cookies from 'universal-cookie';\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nimport { Paper, Tabs, Tab } from '@material-ui/core';\r\nimport TabPanel from '../../common/components/TabPanel';\r\n\r\nimport AppLayout from '../../common/layouts/AppLayout';\r\n\r\nimport BusinessDetailsCard from './components/BusinessDetailsCard';\r\nimport BusinessContactDetails from './components/BusinessContactDetails';\r\nimport BusinessAddressDetails from './components/BusinessAddressDetails';\r\n\r\nfunction BusinessDetails() {\r\n    const cookies = new Cookies();\r\n    let { businessId } = useParams();\r\n    const [businessData, setBusinessData] = React.useState(null);\r\n    const [businessDetailsTab, setBusinessDetailsTab] = React.useState(0);\r\n\r\n    const handleTabChange = (event, newValue) => {\r\n        setBusinessDetailsTab(newValue);\r\n    };\r\n\r\n    useEffect(() => {\r\n\r\n    }, []);\r\n\r\n    return (\r\n        <AppLayout headerTitle={process.env.REACT_APP_NAME} showBack=\"true\">\r\n            {\r\n                businessData ? (<>\r\n                    <Paper elevation={2}>\r\n                        <Tabs\r\n                            value={businessDetailsTab}\r\n                            onChange={handleTabChange}\r\n                            indicatorColor=\"primary\"\r\n                            textColor=\"primary\"\r\n                            variant=\"scrollable\">\r\n                            <Tab label=\"Business Details\" />\r\n                            <Tab label=\"Contact Details\" />\r\n                            <Tab label=\"Addresses\" />\r\n                            {(cookies.get('roles').indexOf('system-admin') > -1) ? <Tab label=\"User Details\" /> : null}\r\n                        </Tabs>\r\n                    </Paper>\r\n                    <TabPanel value={businessDetailsTab} index={0}>\r\n                        <BusinessDetailsCard data={businessData} />\r\n                    </TabPanel>\r\n                    <TabPanel value={businessDetailsTab} index={1}>\r\n                        <BusinessContactDetails data={businessData} />\r\n                    </TabPanel>\r\n                    <TabPanel value={businessDetailsTab} index={2}>\r\n                        <BusinessAddressDetails data={businessData} />\r\n                    </TabPanel>\r\n                    {\r\n                        (cookies.get('roles').indexOf('system-admin') > -1) ?\r\n                            (<TabPanel value={businessDetailsTab} index={3}>\r\n\r\n                            </TabPanel>) : null}\r\n                </>) : null\r\n            }\r\n        </AppLayout>\r\n    )\r\n}\r\n\r\nexport default BusinessDetails\r\n","C:\\Users\\Nath's\\Documents\\SilkRoad\\portal\\src\\common\\components\\TabPanel.js",[],"C:\\Users\\Nath's\\Documents\\SilkRoad\\portal\\src\\pages\\BusinessDetails\\components\\BusinessDetailsCard.js",[],"C:\\Users\\Nath's\\Documents\\SilkRoad\\portal\\src\\pages\\BusinessDetails\\components\\BusinessAddressDetails.js",[],"C:\\Users\\Nath's\\Documents\\SilkRoad\\portal\\src\\pages\\BusinessDetails\\components\\BusinessContactDetails.js",[],"C:\\Users\\Nath's\\Documents\\SilkRoad\\portal\\src\\pages\\ManageUser\\index.js",["264","265","266","267","268","269","270","271"],"import { React, useEffect, useState } from 'react';\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport Form from \"@rjsf/material-ui\";\r\nimport { useMutation, gql } from '@apollo/client';\r\nimport Notiflix from \"notiflix\";\r\nimport AppLayout from '../../common/layouts/AppLayout';\r\n\r\nimport AppForms from '../../common/components/AppForms';\r\n\r\nconst MUTATE_USER = gql`\r\n      mutation ($userId: String!, $password: String!){\r\n        authenticate(userId: $userId, password: $password) {\r\n            firstName\r\n            token\r\n            lastName\r\n            emailVerified\r\n            middleName\r\n            organizationId\r\n            phone\r\n            phoneVerified\r\n            roles\r\n            username\r\n            email\r\n        }\r\n      }\r\n    `\r\n\r\nconst formSchema = {\r\n    \"type\": \"object\",\r\n    \"required\": [\r\n        \"firstName\",\r\n        \"lastName\",\r\n        \"email\",\r\n        \"phone\",\r\n        \"password\",\r\n        \"emailVerified\",\r\n        \"phoneVerified\",\r\n        \"roles\"\r\n    ],\r\n    \"properties\": {\r\n        \"firstName\": {\r\n            \"type\": \"string\",\r\n            \"title\": \"First Name\"\r\n        },\r\n        \"middleName\": {\r\n            \"type\": \"string\",\r\n            \"title\": \"Middle Name\"\r\n        },\r\n        \"lastName\": {\r\n            \"type\": \"string\",\r\n            \"title\": \"Last Name\"\r\n        },\r\n        \"email\": {\r\n            \"type\": \"string\",\r\n            \"title\": \"Email\"\r\n        },\r\n        \"phone\": {\r\n            \"type\": \"string\",\r\n            \"title\": \"Phone Number\",\r\n            \"minLength\": 10\r\n        },\r\n        \"password\": {\r\n            \"type\": \"string\",\r\n            \"title\": \"Password\"\r\n        },\r\n        \"emailVerified\": {\r\n            \"type\": \"boolean\",\r\n            \"title\": \"Email Verified?\",\r\n            \"default\": false\r\n        },\r\n        \"phoneVerified\": {\r\n            \"type\": \"boolean\",\r\n            \"title\": \"Phone Number Verfied?\",\r\n            \"default\": false\r\n        },\r\n        \"roles\": {\r\n            \"type\": \"string\",\r\n            \"title\": \"User Roles\",\r\n            \"enum\": [\r\n                \"buyer\",\r\n                \"seller\"\r\n            ],\r\n            \"enumNames\": [\r\n                \"Buyer\",\r\n                \"Seller\"\r\n            ]\r\n        }\r\n    }\r\n};\r\n\r\nconst uiSchema = {\r\n    \"firstName\": {\r\n        \"ui:gridSm\": 4\r\n    },\r\n    \"middleName\": {\r\n        \"ui:gridSm\": 4\r\n    },\r\n    \"lastName\": {\r\n        \"ui:gridSm\": 4\r\n    },\r\n    \"phone\": {\r\n        \"ui:gridSm\": 6\r\n    },\r\n    \"email\": {\r\n        \"ui:autofocus\": true,\r\n        \"ui:autocomplete\": \"email\",\r\n        \"ui:gridSm\": 6,\r\n        \"ui:options\": {\r\n            \"inputType\": \"email\"\r\n        }\r\n    },\r\n    \"password\": {\r\n        \"ui:widget\": \"password\",\r\n        \"ui:gridSm\": 6\r\n    }\r\n};\r\n\r\nfunction ManageUser(props) {\r\n    let { userId } = useParams();\r\n    const history = useHistory();\r\n    const [formData, setFormData] = useState(null);\r\n    const [userLogin, { loading, data, error }] = useMutation(MUTATE_USER, {\r\n        onError: (err) => {\r\n            Notiflix.Notify.failure('Invalid credentials please try again.', { position: \"right-bottom\", });\r\n        }\r\n    });\r\n\r\n    const handleSubmit = (e) => {\r\n        console.log(formData);\r\n        // userLogin({ variables: { 'userId': formData.email, 'password': formData.password } });\r\n    }\r\n\r\n    return (\r\n        <AppLayout headerTitle={process.env.REACT_APP_NAME} showBack=\"true\">\r\n            <AppForms\r\n                schema={formSchema}\r\n                uiSchema={uiSchema}\r\n                formData={formData}\r\n                spacing={3}\r\n                onChange={e => setFormData(e.formData)}\r\n                onSubmit={handleSubmit} />\r\n        </AppLayout>\r\n    )\r\n}\r\n\r\nexport default ManageUser\r\n","C:\\Users\\Nath's\\Documents\\SilkRoad\\portal\\src\\pages\\UserDetails\\index.js",["272","273","274","275"],"import React, { useEffect } from 'react';\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nimport AppLayout from '../../common/layouts/AppLayout';\r\nimport { Grid } from '@material-ui/core';\r\n\r\nfunction UserDetails() {\r\n    let { userId } = useParams();\r\n    const [userData, setUserData] = React.useState({\r\n        firstName: '',\r\n        middleName: '',\r\n        lastName: '',\r\n        email: '',\r\n        phone: '',\r\n        roles: ['']\r\n    });\r\n    const [userLoading, setUserLoading] = React.useState(false);\r\n\r\n    useEffect(() => {\r\n\r\n    }, []);\r\n\r\n    return (\r\n        <AppLayout headerTitle=\"Invit\" showBack=\"true\">\r\n            <Grid container spacing={2}  className=\"user-details-container\">\r\n                <Grid item xs={12} sm={6}>\r\n                    <h2>Name</h2>\r\n                    <p>{userData?.firstName} {userData?.middleName} {userData?.lastName}</p>\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                    <h2>Email</h2>\r\n                    <p>{userData?.email}</p>\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                    <h2>Phone</h2>\r\n                    <p>{userData?.phone}</p>\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                    <h2>Roles</h2>\r\n                    <p>{userData.roles?.join([', '])}</p>\r\n                </Grid>\r\n            </Grid>\r\n        </AppLayout>\r\n    )\r\n}\r\n\r\nexport default UserDetails\r\n","C:\\Users\\Nath's\\Documents\\SilkRoad\\portal\\src\\common\\components\\AppForms.js",["276"],"import React from 'react';\r\nimport Form from \"@rjsf/material-ui\";\r\nimport Button from \"@material-ui/core/Button/Button\";\r\nimport Grid from \"@material-ui/core/Grid/Grid\";\r\n\r\nfunction AppForms(props) {\r\n    const getColumns = (breakpoint) => {\r\n        const col = (breakpoint === 'xs') ? props.columnsXs : props.columnsSm;\r\n        if (col === 1) {\r\n            return 12;\r\n        }\r\n        if (col === 2) {\r\n            return 6;\r\n        }\r\n        if (col === 3) {\r\n            return 4;\r\n        }\r\n        if (col === 4) {\r\n            return 3;\r\n        }\r\n        return 12;\r\n    };\r\n\r\n    const getSpacing = () => {\r\n        let spacing = 0;\r\n        if (props.spacing != null) {\r\n            spacing = props.spacing;\r\n        }\r\n        return spacing;\r\n    };\r\n\r\n    const ObjectFieldTemplate = (props) => {\r\n        console.log(props.uiSchema);\r\n\r\n        const getGridData = (element) => {\r\n            if (props.uiSchema[element.name]) {\r\n                // console.log(props.uiSchema[element.name]['ui:gridXs'] || 12, props.uiSchema[element.name]['ui:gridSm'] || 12)\r\n                const valXs = props.uiSchema[element.name]['ui:gridXs'] || 12;\r\n                const valSm = props.uiSchema[element.name]['ui:gridSm'] || 12;\r\n                return (\r\n                    <Grid item xs={valXs} sm={valSm} >\r\n                        <div className=\"property-wrapper\">\r\n                            {element.content}\r\n                        </div>\r\n                    </Grid>);\r\n            } else {\r\n                return (\r\n                    <Grid item xs={12}>\r\n                        <div className=\"property-wrapper\">\r\n                            {element.content}\r\n                        </div>\r\n                    </Grid>);\r\n            }\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <Grid container spacing={getSpacing()} >\r\n                    {props.title}\r\n                    {props.description}\r\n                    {\r\n                        props.properties.map(element => {\r\n                            return getGridData(element)\r\n                        })\r\n                    }\r\n                </Grid>\r\n            </div >\r\n        );\r\n    };\r\n\r\n\r\n    return (\r\n        <>\r\n            {!props.hide &&\r\n                <Form {...props} ObjectFieldTemplate={ObjectFieldTemplate} >\r\n                    {\r\n                        props.children &&\r\n                        <div>\r\n                            {props.children}\r\n                        </div>\r\n                    }\r\n                    {\r\n                        !props.children &&\r\n                        <div>\r\n                            <Button type={\"submit\"} disabled={props.disabled} variant=\"contained\" color=\"primary\" style={{color: 'white', marginTop: '10px'}}>\r\n                                {props.submitButtonText ? props.submitButtonText : \"Submit\"}\r\n                            </Button>\r\n                        </div>\r\n                    }\r\n                </Form>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AppForms\r\n","C:\\Users\\Nath's\\Documents\\SilkRoad\\portal\\src\\pages\\Register\\index.js",["277","278","279"],"import { React, useEffect, useState } from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useMutation, gql } from '@apollo/client';\r\nimport Notiflix from \"notiflix\";\r\n\r\nimport AppForms from '../../common/components/AppForms';\r\nimport { Container, Link } from '@material-ui/core';\r\n\r\nimport '../styles/register.scss'\r\n\r\nconst MUTATE_USER = gql`\r\n      mutation ($userId: String!, $password: String!){\r\n        authenticate(userId: $userId, password: $password) {\r\n            firstName\r\n            token\r\n            lastName\r\n            emailVerified\r\n            middleName\r\n            organizationId\r\n            phone\r\n            phoneVerified\r\n            roles\r\n            username\r\n            email\r\n        }\r\n      }\r\n    `\r\n\r\nconst formSchema = {\r\n    \"type\": \"object\",\r\n    \"required\": [\r\n        \"firstName\",\r\n        \"lastName\",\r\n        \"email\",\r\n        \"phone\",\r\n        \"password\",\r\n        \"roles\"\r\n    ],\r\n    \"properties\": {\r\n        \"firstName\": {\r\n            \"type\": \"string\",\r\n            \"title\": \"First Name\"\r\n        },\r\n        \"middleName\": {\r\n            \"type\": \"string\",\r\n            \"title\": \"Middle Name\"\r\n        },\r\n        \"lastName\": {\r\n            \"type\": \"string\",\r\n            \"title\": \"Last Name\"\r\n        },\r\n        \"email\": {\r\n            \"type\": \"string\",\r\n            \"title\": \"Email\"\r\n        },\r\n        \"phone\": {\r\n            \"type\": \"string\",\r\n            \"title\": \"Phone Number\",\r\n            \"minLength\": 10\r\n        },\r\n        \"password\": {\r\n            \"type\": \"string\",\r\n            \"title\": \"Password\"\r\n        },\r\n        \"roles\": {\r\n            \"type\": \"string\",\r\n            \"title\": \"User Role\",\r\n            \"enum\": [\r\n                \"buyer\",\r\n                \"seller\"\r\n            ],\r\n            \"enumNames\": [\r\n                \"Buyer\",\r\n                \"Seller\"\r\n            ]\r\n        }\r\n    }\r\n};\r\n\r\nconst uiSchema = {\r\n    \"firstName\": {\r\n        \"ui:gridSm\": 4\r\n    },\r\n    \"middleName\": {\r\n        \"ui:gridSm\": 4\r\n    },\r\n    \"lastName\": {\r\n        \"ui:gridSm\": 4\r\n    },\r\n    \"phone\": {\r\n        \"ui:gridSm\": 6\r\n    },\r\n    \"email\": {\r\n        \"ui:autofocus\": true,\r\n        \"ui:autocomplete\": \"email\",\r\n        \"ui:gridSm\": 6,\r\n        \"ui:options\": {\r\n            \"inputType\": \"email\"\r\n        }\r\n    },\r\n    \"password\": {\r\n        \"ui:widget\": \"password\",\r\n        \"ui:gridSm\": 6\r\n    },\r\n    \"roles\": {\r\n        \"ui:gridSm\": 6\r\n    }\r\n};\r\n\r\nfunction Register() {\r\n    const history = useHistory();\r\n    const [formData, setFormData] = useState(null);\r\n    const [userRegister, { loading, data, error }] = useMutation(MUTATE_USER, {\r\n        onError: (err) => {\r\n            Notiflix.Notify.failure('Invalid credentials please try again.', { position: \"right-bottom\", });\r\n        }\r\n    });\r\n\r\n    if (loading) {\r\n        Notiflix.Loading.dots();\r\n    }\r\n\r\n    if (data) {\r\n        Notiflix.Loading.remove(300);\r\n        history.replace('/app');\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        console.log(formData);\r\n    }\r\n\r\n    return (\r\n        <Container component=\"main\" maxWidth=\"lg\">\r\n            <div className=\"register-base-container\">\r\n                <h1>{process.env.REACT_APP_NAME}</h1>\r\n                <AppForms\r\n                    schema={formSchema}\r\n                    uiSchema={uiSchema}\r\n                    formData={formData}\r\n                    spacing={3}\r\n                    onChange={e => setFormData(e.formData)}\r\n                    onSubmit={handleSubmit} />\r\n\r\n                <Link href=\"/login\" variant=\"body2\">\r\n                    Back to Login\r\n                </Link>\r\n            </div>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Register\r\n","C:\\Users\\Nath's\\Documents\\SilkRoad\\portal\\src\\website\\Home\\index.js",[],"C:\\Users\\Nath's\\Documents\\SilkRoad\\portal\\src\\website\\Home\\components\\WebsiteHeader.js",[],"C:\\Users\\Nath's\\Documents\\SilkRoad\\portal\\src\\website\\Home\\components\\Header.js",["280"],{"ruleId":"281","replacedBy":"282"},{"ruleId":"283","replacedBy":"284"},{"ruleId":"285","severity":1,"message":"286","line":35,"column":8,"nodeType":"287","endLine":35,"endColumn":10,"suggestions":"288"},{"ruleId":"289","severity":1,"message":"290","line":53,"column":12,"nodeType":"291","messageId":"292","endLine":53,"endColumn":21},{"ruleId":"289","severity":1,"message":"293","line":53,"column":40,"nodeType":"291","messageId":"292","endLine":53,"endColumn":45},{"ruleId":"289","severity":1,"message":"293","line":66,"column":40,"nodeType":"291","messageId":"292","endLine":66,"endColumn":45},{"ruleId":"289","severity":1,"message":"294","line":49,"column":12,"nodeType":"291","messageId":"292","endLine":49,"endColumn":20},{"ruleId":"289","severity":1,"message":"295","line":51,"column":11,"nodeType":"291","messageId":"292","endLine":51,"endColumn":26},{"ruleId":"289","severity":1,"message":"296","line":55,"column":11,"nodeType":"291","messageId":"292","endLine":55,"endColumn":22},{"ruleId":"289","severity":1,"message":"297","line":11,"column":8,"nodeType":"291","messageId":"292","endLine":11,"endColumn":16},{"ruleId":"298","severity":1,"message":"299","line":16,"column":5,"nodeType":"300","messageId":"301","endLine":19,"endColumn":6},{"ruleId":"289","severity":1,"message":"302","line":29,"column":12,"nodeType":"291","messageId":"292","endLine":29,"endColumn":24},{"ruleId":"285","severity":1,"message":"303","line":45,"column":8,"nodeType":"287","endLine":45,"endColumn":15,"suggestions":"304"},{"ruleId":"289","severity":1,"message":"305","line":1,"column":10,"nodeType":"291","messageId":"292","endLine":1,"endColumn":13},{"ruleId":"306","severity":1,"message":"307","line":23,"column":17,"nodeType":"308","messageId":"309","endLine":23,"endColumn":44},{"ruleId":"306","severity":1,"message":"307","line":24,"column":17,"nodeType":"308","messageId":"309","endLine":24,"endColumn":44},{"ruleId":"306","severity":1,"message":"307","line":25,"column":17,"nodeType":"308","messageId":"309","endLine":25,"endColumn":52},{"ruleId":"306","severity":1,"message":"307","line":49,"column":17,"nodeType":"308","messageId":"309","endLine":49,"endColumn":46},{"ruleId":"306","severity":1,"message":"307","line":50,"column":17,"nodeType":"308","messageId":"309","endLine":50,"endColumn":51},{"ruleId":"306","severity":1,"message":"307","line":51,"column":17,"nodeType":"308","messageId":"309","endLine":51,"endColumn":54},{"ruleId":"306","severity":1,"message":"307","line":74,"column":17,"nodeType":"308","messageId":"309","endLine":74,"endColumn":37},{"ruleId":"306","severity":1,"message":"307","line":75,"column":17,"nodeType":"308","messageId":"309","endLine":75,"endColumn":42},{"ruleId":"306","severity":1,"message":"307","line":76,"column":17,"nodeType":"308","messageId":"309","endLine":76,"endColumn":45},{"ruleId":"306","severity":1,"message":"307","line":98,"column":17,"nodeType":"308","messageId":"309","endLine":98,"endColumn":44},{"ruleId":"306","severity":1,"message":"307","line":99,"column":17,"nodeType":"308","messageId":"309","endLine":99,"endColumn":44},{"ruleId":"306","severity":1,"message":"307","line":100,"column":17,"nodeType":"308","messageId":"309","endLine":100,"endColumn":52},{"ruleId":"310","severity":1,"message":"311","line":116,"column":29,"nodeType":"312","endLine":116,"endColumn":97},{"ruleId":"289","severity":1,"message":"313","line":3,"column":41,"nodeType":"291","messageId":"292","endLine":3,"endColumn":49},{"ruleId":"289","severity":1,"message":"314","line":1,"column":17,"nodeType":"291","messageId":"292","endLine":1,"endColumn":26},{"ruleId":"289","severity":1,"message":"315","line":2,"column":10,"nodeType":"291","messageId":"292","endLine":2,"endColumn":16},{"ruleId":"289","severity":1,"message":"316","line":2,"column":18,"nodeType":"291","messageId":"292","endLine":2,"endColumn":22},{"ruleId":"289","severity":1,"message":"317","line":2,"column":24,"nodeType":"291","messageId":"292","endLine":2,"endColumn":33},{"ruleId":"289","severity":1,"message":"318","line":2,"column":35,"nodeType":"291","messageId":"292","endLine":2,"endColumn":46},{"ruleId":"289","severity":1,"message":"313","line":2,"column":48,"nodeType":"291","messageId":"292","endLine":2,"endColumn":56},{"ruleId":"289","severity":1,"message":"319","line":2,"column":58,"nodeType":"291","messageId":"292","endLine":2,"endColumn":67},{"ruleId":"289","severity":1,"message":"320","line":62,"column":11,"nodeType":"291","messageId":"292","endLine":62,"endColumn":21},{"ruleId":"289","severity":1,"message":"321","line":63,"column":11,"nodeType":"291","messageId":"292","endLine":63,"endColumn":18},{"ruleId":"289","severity":1,"message":"290","line":65,"column":12,"nodeType":"291","messageId":"292","endLine":65,"endColumn":21},{"ruleId":"289","severity":1,"message":"322","line":65,"column":25,"nodeType":"291","messageId":"292","endLine":65,"endColumn":32},{"ruleId":"289","severity":1,"message":"323","line":65,"column":34,"nodeType":"291","messageId":"292","endLine":65,"endColumn":38},{"ruleId":"289","severity":1,"message":"293","line":65,"column":40,"nodeType":"291","messageId":"292","endLine":65,"endColumn":45},{"ruleId":"289","severity":1,"message":"320","line":16,"column":11,"nodeType":"291","messageId":"292","endLine":16,"endColumn":21},{"ruleId":"289","severity":1,"message":"324","line":17,"column":26,"nodeType":"291","messageId":"292","endLine":17,"endColumn":41},{"ruleId":"289","severity":1,"message":"314","line":1,"column":17,"nodeType":"291","messageId":"292","endLine":1,"endColumn":26},{"ruleId":"289","severity":1,"message":"325","line":3,"column":8,"nodeType":"291","messageId":"292","endLine":3,"endColumn":12},{"ruleId":"289","severity":1,"message":"326","line":119,"column":11,"nodeType":"291","messageId":"292","endLine":119,"endColumn":17},{"ruleId":"289","severity":1,"message":"321","line":120,"column":11,"nodeType":"291","messageId":"292","endLine":120,"endColumn":18},{"ruleId":"289","severity":1,"message":"290","line":122,"column":12,"nodeType":"291","messageId":"292","endLine":122,"endColumn":21},{"ruleId":"289","severity":1,"message":"322","line":122,"column":25,"nodeType":"291","messageId":"292","endLine":122,"endColumn":32},{"ruleId":"289","severity":1,"message":"323","line":122,"column":34,"nodeType":"291","messageId":"292","endLine":122,"endColumn":38},{"ruleId":"289","severity":1,"message":"293","line":122,"column":40,"nodeType":"291","messageId":"292","endLine":122,"endColumn":45},{"ruleId":"289","severity":1,"message":"326","line":8,"column":11,"nodeType":"291","messageId":"292","endLine":8,"endColumn":17},{"ruleId":"289","severity":1,"message":"327","line":9,"column":22,"nodeType":"291","messageId":"292","endLine":9,"endColumn":33},{"ruleId":"289","severity":1,"message":"328","line":17,"column":12,"nodeType":"291","messageId":"292","endLine":17,"endColumn":23},{"ruleId":"289","severity":1,"message":"329","line":17,"column":25,"nodeType":"291","messageId":"292","endLine":17,"endColumn":39},{"ruleId":"289","severity":1,"message":"330","line":7,"column":11,"nodeType":"291","messageId":"292","endLine":7,"endColumn":21},{"ruleId":"289","severity":1,"message":"314","line":1,"column":17,"nodeType":"291","messageId":"292","endLine":1,"endColumn":26},{"ruleId":"289","severity":1,"message":"331","line":113,"column":12,"nodeType":"291","messageId":"292","endLine":113,"endColumn":24},{"ruleId":"289","severity":1,"message":"293","line":113,"column":43,"nodeType":"291","messageId":"292","endLine":113,"endColumn":48},{"ruleId":"289","severity":1,"message":"332","line":5,"column":8,"nodeType":"291","messageId":"292","endLine":5,"endColumn":20},"no-native-reassign",["333"],"no-negated-in-lhs",["334"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'cookies' and 'token'. Either include them or remove the dependency array.","ArrayExpression",["335"],"no-unused-vars","'userLogin' is assigned a value but never used.","Identifier","unusedVar","'error' is assigned a value but never used.","'anchorEl' is assigned a value but never used.","'handleMenuClick' is assigned a value but never used.","'handleClose' is assigned a value but never used.","'Notiflix' is defined but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'tableLoading' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'pageConfig' and 'tableType'. Either include them or remove the dependency array.",["336"],"'gql' is defined but never used.","no-template-curly-in-string","Unexpected template string expression.","Literal","unexpectedTemplateExpression","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'MenuItem' is defined but never used.","'useEffect' is defined but never used.","'Button' is defined but never used.","'Grid' is defined but never used.","'TextField' is defined but never used.","'CssBaseline' is defined but never used.","'Container' is defined but never used.","'businessId' is assigned a value but never used.","'history' is assigned a value but never used.","'loading' is assigned a value but never used.","'data' is assigned a value but never used.","'setBusinessData' is assigned a value but never used.","'Form' is defined but never used.","'userId' is assigned a value but never used.","'setUserData' is assigned a value but never used.","'userLoading' is assigned a value but never used.","'setUserLoading' is assigned a value but never used.","'getColumns' is assigned a value but never used.","'userRegister' is assigned a value but never used.","'ListItemIcon' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"337","fix":"338"},{"desc":"339","fix":"340"},"Update the dependencies array to be: [cookies, token]",{"range":"341","text":"342"},"Update the dependencies array to be: [pageConfig, props, tableType]",{"range":"343","text":"344"},[1268,1270],"[cookies, token]",[1591,1598],"[pageConfig, props, tableType]"]